[32m
       Hilfe im Terminal, auf Deutsch.     
 _____      _                          _   
|_   _|   _| |_ ___  _ __   __ _ _   _| |_ 
  | || | | | __/ _ \| '_ \ / _` | | | | __|
  | || |_| | || (_) | | | | (_| | |_| | |_ 
  |_| \__,_|\__\___/|_| |_|\__,_|\__,_|\__|

         curl cli.help/[31mSCHLAGWORT
[31m
###########################################
##            √úber cli.help              ##
###########################################

[92mcli.help[0m ist ein Projekt von Tutonaut.de.
Weitere Infos und alle Features: [92mcurl cli.help
[31m
###########################################
##                  regex                ##
###########################################

[33m## √úbersicht WICHTIGER RegEx-Anweisungen. Je nachdem
wo sie genutzt werden, kann die Syntax leicht abweichen, 
da PHP, Perl und andere Tools eigene Dialekte verwenden.

√úblich sind neben "normalen" Ausdr√ºcken auch
POSIX-/erweiterte Varianten, etwa [:lower:] statt [a-z] -
einige werden hier mit aufgef√ºhrt.
Hier drei mal das Gleiche:

[31m [:word:]     [0mGanzes Wort
[31m \w           [0mGanzes Wort
[31m [[:alnum:]_] [0mGanzes Wort - in der Praxis immer doppelte Klammern,
                            da mehrere Klassen kombiniert werden k√∂nnen.

Im Zweifelsfall schaut bei regex101.com vorbei.

Beispiele folgen unten.

[33m## Top 10
[31m .             [0mBeliebiges Zeichen
[31m *             [0m0 oder mehr
[31m 'a|b'         [0ma ODER b
[31m \n            [0mZeilenumbruch
[31m \t            [0mTab
[31m \d            [0mZiffern - als POSIX-Variante: [:digit:]
[31m ^             [0mAnfang der Zeile
[31m $             [0mEnde der Zeile
[31m (hallo)(welt) [0mhallo als Matchgruppe $1, welt als $2
[31m \QIch\.*bin\E [0mW√∂rtlich: "Ich\.*bin"

[33m## Anker
[31m ^             [0mAnfang der Zeile
[31m $             [0mEnde der Zeile
[31m \b            [0mGanzes Wort
[31m \<            [0mWortanfang
[31m \>            [0mWortende

[33m## Zeichenklassen
[31m \s            [0mWhitespace
[31m [:space:]     [0mWhitespace
[31m \S            [0mNicht-Whitespace
[31m \d            [0mZiffer
[31m \D            [0mKeine Ziffer
[31m \w            [0mGanzes Wort
[31m \W            [0mKein Wort
[31m [A-Z]         [0mGro√übuchstaben
[31m [:upper:]     [0mGro√übuchstaben
[31m [a-z]         [0mKleinbuchstaben
[31m [:lower:]     [0mKleinbuchstaben
[31m [:alpha:]     [0mGro√ü- und Kleinbuchstaben
[31m [A-Za-z]      [0mGro√ü- und Kleinbuchstaben
[31m [0-9]         [0mZiffern
[31m [:digit:]     [0mZiffern
[31m [0-9A-Za-z]   [0mZiffern und Buchstaben
[31m [:alnum:]     [0mZiffern und Buchstaben
[31m [ \t]         [0mSpace und TAB
[31m [:blank:]     [0mSpace und TAB

[33m## Quantifizierer
[31m *             [0m0 oder mehr
[31m +             [0m1 oder mehr
[31m ?             [0m0 oder 1
[31m {4}           [0m4
[31m {4,}          [0m4 oder mehr
[31m {4,7}         [0m4 bis 7

[33m## Sonderzeichen
[31m \n            [0mNew-Line-Zeilenumbruch
[31m \r            [0mCarriage-return-Zeilenumbruch
[31m \t            [0mTab
[31m \v            [0mVertikaler Tab

[33m## Lookarounds, Conditionals
[31m (?!)          [0mNegative Lookahead
[31m (?<!)         [0mNegative Lookbehind
[31m (?=)          [0mPositive Lookahead
[31m (?<=)         [0mPositive Lookbehind
[31m (?(?<=if.)then|else) [0mMatcht THEN nach "if " und ELSE nach allem au√üer "if ".
[31m (if.)?(?(1)then|else) [0mMatcht IF THEN oder ELSE
[33m## Ja, der Abschnitt ist verwirrend ;)

[33m## Beispiele mit grep und sed
Je nach Tool sehen die RegExes anders aus - und selbst
einzelne Tools funktionieren teils je nach Version leicht
bis deutlich unterschiedlich ... ist leider so.

[33m## Suche nach "foo oder bar" - Standard und Perl (-P):
[31m grep [0m-e 'foo\|bar'
[31m grep [0m-eP 'foo|bar'

[33m## Suche nach foo ohne Bindestrich davor/danach:
[31m grep [0m-eP '(?<!-)foo(?!-)'

[33m## Suche nach IPs wie 192.168.77.1:
[31m grep [0m-e '(\d{1,3}\.){3}\d{1,3}'

[33m## sed: you durch me ersetzen - normal, POSIX-/erweiterte Variante (-E):
[0mecho fuck you | [31msed[0m 's/\(.*\)\(you\)/\1 me/'
echo fuck you | [31msed[0m -E 's/(.*)(you)/\1 me/'

[33m## In diesem Zusammenhang interessant:
[31m curl [0mcli.help/sed
[31m curl [0mcli.help/grep
Ausf√ºhrlich: tutonaut.de/regulaere-ausdruecke-retten-das-jahr-2302/

















