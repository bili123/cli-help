[32m
       Hilfe im Terminal, auf Deutsch.     
 _____      _                          _   
|_   _|   _| |_ ___  _ __   __ _ _   _| |_ 
  | || | | | __/ _ \| '_ \ / _` | | | | __|
  | || |_| | || (_) | | | | (_| | |_| | |_ 
  |_| \__,_|\__\___/|_| |_|\__,_|\__,_|\__|

         curl cli.help/[31mSCHLAGWORT
[31m
###########################################
##            √úber cli.help              ##
###########################################

[92mcli.help[0m ist ein Projekt von Tutonaut.de.
Weitere Infos und alle Features: [92mcurl cli.help
[31m
###########################################
##            Git                        ##
###########################################

[33m## Standard-Git-Workflow nach Editieren von datei1 und Anlegen von datei2:
[31m git pull
[31m git add[0m datei2
[31m git commit[0m -am "ABC in datei1 ge√§ndert und datei2 angelegt."
[31m git push

[33m## Nur datei3 committen:
[31m git commit[0m -m "Meine Commit-Nachricht." datei3

[33m## Log anzeigen und aufh√ºbschen:
[31m git log[0m --graph -p --stat --color-words

[33m## Noch nicht gepushte Commits anzeigen:
[31m git log[0m --stat origin/master..master

[33m## Einzelnen Commit mit Hash 123456 h√ºbsch anzeigen:
[31m git show[0m --pretty=fuller --abbrev-commit 123456

[33m## Die letzten drei Commits zur√ºcknehmen - zwei Varianten:
[31m git reset[0m HEAD^^^
[31m git reset[0m HEAD~3

[33m## Nicht committete √Ñnderungen in datei1 r√ºckg√§ngig machen. Anders
ausgedr√ºckt: datei1 mit Stand des letzten Commits √ºberschreiben:
[31m git checkout[0m -- /mein/ordner/datei1

[33m## Nicht geaddete Dateien interaktiv l√∂schen:
[31m git clean[0m -i

[33m## Branch testing erstellen, dorthin wechseln, Upstream setzen,
√Ñnderungen aus master-Branch holen und mergen:
[31m git branch[0m testing
[31m git checkout[0m testing
[31m git push[0m --set-upstream origin testing
[31m git pull[0m origin master

[33m## Aus Branch master heraus den lokalen testing-Branch mergen:
[31m git merge[0m testing

[33m## Entfernte Quell-URL des Repositories anzeigen:
[31m git remote[0m show origin

[33m## Vergessene neue Datei datei6 nachtr√§glich in letzten Commit aufnehmen:
[31m git add[0m datei6
[31m git commit[0m --amend --no-edit

[33m## Nutzername und -Mail global festlegen:
[31m git config[0m --global user.name "Peter Pan"
[31m git config[0m --global user.email peterpan@example.com

[33m## Git-Konfiguration ausgeben:
[31m git config[0m --list

[33m## Und falls Ihr bei Merge-Konflikten mal im vi-Editor landet: i-Taste dr√ºcken f√ºr 
Eingabemodus, Merge-Nachricht eingeben. Dann ESC-Taste dr√ºcken und folgenden Befehl zum 
Speichern (w) und Beenden (q) ausf√ºhren:
[31m :wq
